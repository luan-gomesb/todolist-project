import axios from "axios";
import { GetServerSidePropsContext } from "next";
import Head from "next/head";
import React, { useContext, useEffect, useRef, useState } from "react";
import TodolistView from "../src/components/TodolistView/TodolistView";
import TodoList from "../src/entities/Todolist";
import useTodoListHook from "../src/presenters/useTodoListHook";
import styles from "../styles/Home.module.css";
import { TodolistContext, TodolistProvider } from "../src/contexts/TodolistContext";
import FormTodos, { FormTodosData } from "../src/components/FormTodos/FormTodos";
type Item = {
	id: string;
	description: string;
	done: boolean;
};
type homeProps = {
	data: Item[];
};
function Counter() {
	const [todos] = useContext(TodolistContext)!;
	return <div><strong>{todos.length}</strong></div>
}

export default function Home(props: homeProps) {
	const [todos, todosDispatch] = useContext(TodolistContext)!;

	function handleAdd(data: FormTodosData) {
		let description = data.description;
		todosDispatch("create", { description })
	}
	const handleToggle = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {
		const id = e.currentTarget.dataset.key!;
		todosDispatch("toggle", { id });
	};

	const handleDelete = (e: React.FormEvent<HTMLSpanElement>) => {
		const id = e.currentTarget.dataset.key;
		console.log(id);
		todosDispatch("remove", { id });
	};
	return (
		<div className="container text-center">
			<Head>
				<title>a </title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>

			<h1 className="display-1">TodoList</h1>
			<Counter />
			<main className="row">
				<FormTodos onFormSubmit={handleAdd} clearAfterSubmit={true} />
				<div>
					<hr />
				</div>
				<div className="todo-list-view">
					{todos.map((item) => (
						<TodolistView
							key={item.id}
							item={item}
							ontoggle={handleToggle}
							ondelete={handleDelete}
						/>
					))}
				</div>
			</main>
		</div>
	);
}

export const getServerSideProps = async (
	context: GetServerSidePropsContext
) => {
	// console.log(process.env.NEXT_PUBLICAPI);
	const response = await fetch("http://localhost:3000/api/todos");
	const todos: Item[] = await response.json();
	// console.log("backend:", todos);
	return {
		props: {
			data: todos,
		},
	};
};
