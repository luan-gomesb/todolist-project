import axios, { Axios } from "axios";
import { GetServerSidePropsContext } from "next";
import Head from "next/head";
import React, { useContext, useEffect, useRef, useState } from "react";
import TodolistView from "../src/components/TodolistView/TodolistView";
import TodoList from "./api/todos/Todolist";
import useTodoListHook from "../src/presenters/useFuncionList";
import styles from "../styles/Home.module.css";
import { TodolistContext, TodolistProvider } from "../src/contexts/TodolistContext";
import FormTodos, { FormTodosData } from "../src/components/FormTodos/FormTodos";
import TodolistAPI from "../src/Services/TodolistAPI";
import { log } from "console";
import useTodoListApi from "../src/presenters/userTodolistApi";
import ErrorBoundary from "../src/components/ErrorBoundary/ErrorBoundary";
type Item = {
    id: string;
    description: string;
    done: boolean;
};
type homeProps = {
    items: Item[];
};
function Counter() {
    const [todos] = useContext(TodolistContext)!;
    return <div><strong>{todos.length}</strong></div>
}

export default function Home(props: homeProps) {
    const [todos, todosDispatch] = useContext(TodolistContext)!;
    let service = useTodoListApi();
    useEffect(() => {
        todosDispatch("load", { items: props.items });
    }, [])

    // 

    async function handleAdd(data: FormTodosData) {
        let description = data.description;
        // todosDispatch("create", { description })
        let item = await service.create({ id: null, description, done: false }) as Item;
        console.log("item:", item)
        todosDispatch("create", { item })
    }
    const handleToggle = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {
        const id = e.currentTarget.dataset.key!;
        todosDispatch("toggle", { id });
    };

    const handleDelete = (e: React.FormEvent<HTMLSpanElement>) => {
        const id = e.currentTarget.dataset.key;
        console.log(id);
        todosDispatch("remove", { id });
    };
    return (
        <ErrorBoundary>
            <div className="container text-center">
                <Head>
                    <title>a </title>
                    <meta name="description" content="Generated by create next app" />
                    <link rel="icon" href="/favicon.ico" />
                </Head>

                <h1 className="display-1">TodoList</h1>
                <Counter />
                <main className="row">
                    <div className="todo-list-view">
                        {todos.map((item) => (
                            <TodolistView
                                key={item.id}
                                item={item}
                                ontoggle={handleToggle}
                                ondelete={handleDelete}
                            />
                        ))}
                    </div>
                    <div>
                        <hr />
                    </div>
                    <FormTodos onFormSubmit={handleAdd} clearAfterSubmit={true} />
                </main>
            </div>
        </ErrorBoundary>
    );
}

export const getServerSideProps = async (
    context: GetServerSidePropsContext
) => {
    // console.log(process.env.NEXT_PUBLICAPI);
    // const response = await fetch("http://localhost:3000/api/todos");

    const todolistapi = TodolistAPI("http://localhost:3000/api", axios);
    const response = await todolistapi.list();
    console.log("backend:", response);
    return {
        props: {
            items: response
        },
    };
};
